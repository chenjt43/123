/*
 * -------------------------------------------------------------------------------------------------
 * 版权信息：	中国英谷平台 版权所有 2015
 * 功能描述：	Users业务实体
 * 
 * 创建人：　	Chenjt
 * 创建日期：	2015/11/19 16:01:26
 * 创建说明：	自动生成代码，严禁修改
 * -------------------------------------------------------------------------------------------------
 * This file is generated by CodeGenerator(Ver 2.2), a product of ZhouYonghua(Zhou_Yonghua@163.com).
 * -------------------------------------------------------------------------------------------------
 */

using System;
using System.Collections.Generic;
using System.Text;

#if EnableWCF
using System.Runtime.Serialization;
#endif

namespace Zkjj.Zgyinggu.BusinessEntities
{
	/// <summary>
	/// Users业务实体
	/// </summary>
#if EnableWCF
	[DataContract] [Serializable]
#else
	[Serializable]
#endif
	public partial class Users : UsersBase
	{
		#region Constructor
		/// <summary>
		/// Users构造函数--默认
		/// </summary>
		public Users()
			: base()
		{
		}
		
		/// <summary>
		/// Users构造函数--所有属性
		/// </summary>
		/// <param name="userId">UserId</param>
		/// <param name="userName">UserName</param>
		/// <param name="password">Password</param>
		/// <param name="displayName">DisplayName</param>
		/// <param name="userHeadImg">UserHeadImg</param>
		/// <param name="email">Email</param>
		public Users(Int32 userId, String userName, String password, String displayName, String userHeadImg, String email)
			: base(userId, userName, password, displayName, userHeadImg, email)
		{
		}
		
		#endregion Constructor
	}
	
	/// <summary>
	/// Users业务实体基类
	/// </summary>
#if EnableWCF
	[DataContract] [Serializable]
#else
	[Serializable]
#endif
	public abstract partial class UsersBase
	{
		#region Constructor
		/// <summary>
		/// Users构造函数--默认
		/// </summary>
		protected UsersBase()
		{
		}
		
		/// <summary>
		/// Users构造函数--所有属性
		/// </summary>
		/// <param name="userId">UserId</param>
		/// <param name="userName">UserName</param>
		/// <param name="password">Password</param>
		/// <param name="displayName">DisplayName</param>
		/// <param name="userHeadImg">UserHeadImg</param>
		/// <param name="email">Email</param>
		protected UsersBase(Int32 userId, String userName, String password, String displayName, String userHeadImg, String email)
		{
			this.userIdField = userId;
			this.userNameField = userName;
			this.passwordField = password;
			this.displayNameField = displayName;
			this.userHeadImgField = userHeadImg;
			this.emailField = email;
		}
		
		#endregion Constructor
		
		#region Fields, Properties
		private Int32 userIdField;
		/// <summary>
		/// UserId
		/// </summary>
#if EnableWCF
		[DataMember]
#endif
		public virtual Int32 UserId
		{
			get
			{
				return this.userIdField;
			}
			set
			{
				this.userIdField = value;
			}
		}
		
		private String userNameField;
		/// <summary>
		/// UserName
		/// </summary>
#if EnableWCF
		[DataMember]
#endif
		public virtual String UserName
		{
			get
			{
				return this.userNameField;
			}
			set
			{
				this.userNameField = value;
			}
		}
		
		private String passwordField;
		/// <summary>
		/// Password
		/// </summary>
#if EnableWCF
		[DataMember]
#endif
		public virtual String Password
		{
			get
			{
				return this.passwordField;
			}
			set
			{
				this.passwordField = value;
			}
		}
		
		private String displayNameField;
		/// <summary>
		/// DisplayName
		/// </summary>
#if EnableWCF
		[DataMember]
#endif
		public virtual String DisplayName
		{
			get
			{
				return this.displayNameField;
			}
			set
			{
				this.displayNameField = value;
			}
		}
		
		private String userHeadImgField;
		/// <summary>
		/// UserHeadImg
		/// </summary>
#if EnableWCF
		[DataMember]
#endif
		public virtual String UserHeadImg
		{
			get
			{
				return this.userHeadImgField;
			}
			set
			{
				this.userHeadImgField = value;
			}
		}
		
		private String emailField;
		/// <summary>
		/// Email
		/// </summary>
#if EnableWCF
		[DataMember]
#endif
		public virtual String Email
		{
			get
			{
				return this.emailField;
			}
			set
			{
				this.emailField = value;
			}
		}
		
		#endregion Fields, Properties
	}
}
