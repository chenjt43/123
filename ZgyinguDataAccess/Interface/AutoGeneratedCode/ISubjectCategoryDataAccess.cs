/*
 * -------------------------------------------------------------------------------------------------
 * 版权信息：	中国英谷平台 版权所有 2015
 * 功能描述：	SubjectCategory数据访问接口
 * 
 * 创建人：　	Chenjt
 * 创建日期：	2015/11/17 15:07:31
 * 创建说明：	自动生成代码，严禁修改
 * -------------------------------------------------------------------------------------------------
 * This file is generated by CodeGenerator(Ver 2.2), a product of ZhouYonghua(Zhou_Yonghua@163.com).
 * -------------------------------------------------------------------------------------------------
 */

using System;
using System.Collections.Generic;
using System.Data.Common;
using System.Globalization;
using System.Text;

using Zkjj.Zgyinggu.BusinessEntities;

namespace Zkjj.Zgyinggu.DataAccess.Interface
{
	/// <summary>
	/// SubjectCategory数据访问接口
	/// </summary>
	public partial interface ISubjectCategoryDataAccess : ISubjectCategoryDataAccessBase
	{
	}

	/// <summary>
	/// SubjectCategory数据访问基础接口
	/// </summary>
	public interface ISubjectCategoryDataAccessBase
	{

		/// <summary>
		/// 增加（事务处理）
		/// </summary>
		/// <param name="transaction">事务</param>
		/// <param name="subjectCategory">SubjectCategory</param>
		void Add(DbTransaction transaction, SubjectCategory subjectCategory);
		
		///// <summary>
		///// 增加
		///// </summary>
		///// <param name="subjectCategory">SubjectCategory</param>
		//public virtual void Add(SubjectCategory subjectCategory)
		//{
		//  Add(null, subjectCategory);
		//}
		
		/// <summary>
		/// 删除（事务处理）
		/// </summary>
		/// <param name="transaction">事务</param>
		/// <param name="id">Id</param>
		void Remove(DbTransaction transaction, Int32 id);
		
		///// <summary>
		///// 删除
		///// </summary>
		///// <param name="id">Id</param>
		//public virtual void Remove(Int32 id)
		//{
		//  Remove(null, id);
		//}
		
		/// <summary>
		/// 保存（事务处理）
		/// </summary>
		/// <param name="transaction">事务</param>
		/// <param name="subjectCategory">SubjectCategory</param>
		void Save(DbTransaction transaction, SubjectCategory subjectCategory);
		
		///// <summary>
		///// 保存
		///// </summary>
		///// <param name="subjectCategory">SubjectCategory</param>
		//public virtual void Save(SubjectCategory subjectCategory)
		//{
		//  Save(null, subjectCategory);
		//}
		
		/// <summary>
		/// 根据标识获取对象
		/// </summary>
		/// <param name="id">Id</param>
		/// <returns>SubjectCategory</returns>
		SubjectCategory GetById(Int32 id);

		/// <summary>
		/// 获取所有对象列表（分页，可排序）
		/// </summary>
		/// <param name="startRowIndex">起始记录号</param>
		/// <param name="maximumRows">行数</param>
		/// <param name="sortExpression">排序表达式</param>
		/// <param name="totalRecords">（返回）记录总数</param>
		/// <returns>SubjectCategory列表</returns>
		SubjectCategoryList GetPagedListAll(int startRowIndex, int maximumRows, string sortExpression, out int totalRecords);
		
		
		/// <summary>
		/// 根据条件获取对象列表（分页，可排序）
		/// </summary>
		/// <param name="startRowIndex">起始记录号</param>
		/// <param name="maximumRows">行数</param>
		/// <param name="sortExpression">排序表达式</param>
		/// <param name="criteria">查询条件(以And开头)</param>
		/// <param name="totalRecords">（返回）记录总数</param>
		/// <returns>SubjectCategory列表</returns>
		SubjectCategoryList GetPagedListByCriteria(int startRowIndex, int maximumRows, string sortExpression, string criteria, out int totalRecords);
	}
}
